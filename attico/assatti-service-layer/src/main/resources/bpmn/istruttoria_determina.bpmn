<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" id="Definitions_1" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.4.1">
  <bpmn:process id="istruttoriaDD" name="istruttoriaDD" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>SequenceFlow_1cyvzyd</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:userTask id="UserTask_05kb3hb" name="Predisposizione Proposta" camunda:assignee="${ ISTRUTTORE_ATTO }">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="LISTA_DECISIONI">
            <camunda:script scriptFormat="groovy">import it.linksmt.assatti.bpm.util.ListaDecisioni

decisioni = new ListaDecisioni()
decisioni.addDecisione('Salva', false)

codiceDecisioneGenera = 'GENERA_ATTO'
if(TIPO_ATTO.equalsIgnoreCase('DL')){
    codiceDecisioneGenera = 'GENERA_ATTO_DL';
}


if (TIPO_ITER != 'SENZA_VERIFICA_CONTABILE') {
    decisioni.addDecisione('Salva e Inoltra Proposta', 'INVIO_A_CONTABILE_ISTRUTTORE', 'NO', codiceDecisioneGenera, true)
    decisioni.addDecisione('Recupera Movimenti Contabili', null, null, 'RECUPERA_DATI_CONTABILI', false)
    decisioni.addDecisione('Invia dati Contabili', null, null, 'INVIA_DATI_CONTABILI', false)
    decisioni.addDecisione('Salva e Invia ad Ufficio Contabile Proponente',  'INVIO_A_CONTABILE_ISTRUTTORE', 'SI', 'INVIA_A_ISTRUTTORE_CONTABILE_PROPONENTE', true)
}
else {
    //decisioni.addDecisione('Salva e Inoltra Proposta', true)
    decisioni.addDecisione('Salva e Inoltra Proposta', 'INVIO_A_CONTABILE_ISTRUTTORE', 'NO', codiceDecisioneGenera, true)
}

decisioni.addDecisione("Ritira Proposta", "ritiro", "RITIRO", "SI", "RITIRO_FASE_ISTRUTTORIA", true)

if(execution.hasVariable('TIPO_ATTO') &amp;&amp; execution.getVariable('TIPO_ATTO')!=null &amp;&amp; execution.getVariable('TIPO_ATTO').equalsIgnoreCase('DD')){
if(execution.hasVariable("TIPO_ITER") &amp;&amp; execution.getVariable('TIPO_ITER') != null &amp;&amp; execution.getVariable('TIPO_ITER').equalsIgnoreCase('CON_VERIFICA_CONTABILE')){
   decisioni.addEditIter("Modifica Iter Burocratico", "EDIT_ITER", "SI", "EDIT_ITER_DD_TO_SENZA_VERIFICA", true)
}else if(execution.hasVariable("TIPO_ITER") &amp;&amp; execution.getVariable('TIPO_ITER') != null &amp;&amp; execution.getVariable('TIPO_ITER').equalsIgnoreCase('SENZA_VERIFICA_CONTABILE')){
   decisioni.addEditIter("Modifica Iter Burocratico", "EDIT_ITER", "SI", "EDIT_ITER_DD_TO_CON_VERIFICA", true)
}
}

decisioni.export()</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="SCENARI_DISABILITAZIONE">
            <camunda:list>
              <camunda:value>TipoIterNonModificabile</camunda:value>
              <camunda:value>DataScadenzaContabileEditabile</camunda:value>
              <camunda:value>ImportiEntrataUscitaEditabili</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
          <camunda:inputParameter name="ASSEGNAZIONE_INCARICHI">
            <camunda:script scriptFormat="groovy">import it.linksmt.assatti.bpm.util.ListaAssegnazioniIncarichi

assegnazioni = new ListaAssegnazioniIncarichi()

assegnazioni.addAssegnazioneIncarico('DIR_VISTO_RESPONSABILE_ISTRUTTORIA', 'VISTO_RESPONSABILE_ISTRUTTORIA')
assegnazioni.addAssegnazioneIncarico('DIR_PARERE_ISTRUTTORIO_RESPONSABILE', 'GROUP_PARERE_ISTRUTTORIO_RESPONSABILE')
assegnazioni.addAssegnazioneIncarico('DIR_VERIFICA_RESPONSABILE_TECNICO', 'VERIFICA_RESPONSABILE_TECNICO')
assegnazioni.addAssegnazioneIncarico('DIR_VERIFICA_ALTRI_RESPONSABILI', 'LIST_VERIFICA_ALTRI_RESPONSABILI')

if (!TIPO_ITER.equalsIgnoreCase('SENZA_VERIFICA_CONTABILE')) {
   assegnazioni.addAssegnazioneIncarico('DIR_ISTRUTTORE_CONTABILE', 'GROUP_ISTRUTTORE_CONTABILE')
   assegnazioni.addAssegnazioneIncarico('ISTRUTTORE_CONTABILE_PROPONENTE', 'GROUP_ISTRUTTORE_CONTABILE_PROPONENTE')
}

assegnazioni.export()</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="LISTA_DOCUMENTI_ANTEPRIMA">
            <camunda:script scriptFormat="groovy">java.util.ArrayList

LISTA_DOCUMENTI_ANTEPRIMA = new ArrayList();

if(TIPO_ATTO.equalsIgnoreCase('DD')){
	LISTA_DOCUMENTI_ANTEPRIMA.add('PROPOSTA_DETERMINA_DIRIGENZIALE')
} else if(TIPO_ATTO.equalsIgnoreCase('DL')){
	LISTA_DOCUMENTI_ANTEPRIMA.add('PROPOSTA_DETERMINA_LIQUIDAZIONE')
}

return LISTA_DOCUMENTI_ANTEPRIMA</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="LISTA_DOCUMENTI_GENERAZIONE">
            <camunda:script scriptFormat="groovy">java.util.ArrayList

LISTA_DOCUMENTI_GENERAZIONE = new ArrayList();

if(TIPO_ATTO.equalsIgnoreCase('DD')){
	LISTA_DOCUMENTI_GENERAZIONE.add('PROPOSTA_DETERMINA_DIRIGENZIALE')
} else if(TIPO_ATTO.equalsIgnoreCase('DL')){
	LISTA_DOCUMENTI_GENERAZIONE.add('PROPOSTA_DETERMINA_LIQUIDAZIONE')
}

return LISTA_DOCUMENTI_GENERAZIONE</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="RIGENERAZIONE_DOCUMENTO">SI</camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:taskListener event="create">
          <camunda:script scriptFormat="groovy">if(task.hasVariable('EDIT_ITER')){
   task.removeVariable('EDIT_ITER')
}</camunda:script>
        </camunda:taskListener>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1cyvzyd</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1503ep8</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1utbe12</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0zgw00c</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="SequenceFlow_0zgw00c" sourceRef="UserTask_05kb3hb" targetRef="ExclusiveGateway_03n2wid" />
    <bpmn:sequenceFlow id="SequenceFlow_1cyvzyd" sourceRef="StartEvent_1" targetRef="UserTask_05kb3hb" />
    <bpmn:endEvent id="EndEvent_1hchzca">
      <bpmn:incoming>SequenceFlow_00xs8y9</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_0dlysep</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Task_0sbjdua" name="Evento Proposta Creata" camunda:delegateExpression="${ registrazioneEventoService }">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="IMPOSTA_STATO">Proposta in Predisposizione</camunda:inputParameter>
          <camunda:inputParameter name="REGISTRA_EVENTO">PROPOSTA_CREATA</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0k48vd8</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_0sntujt</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_00xs8y9</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_00xs8y9" sourceRef="Task_0sbjdua" targetRef="EndEvent_1hchzca" />
    <bpmn:exclusiveGateway id="ExclusiveGateway_03n2wid" default="SequenceFlow_0gc5i7q">
      <bpmn:incoming>SequenceFlow_0zgw00c</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0gc5i7q</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_0k48vd8</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_0dlysep</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1utbe12</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0gc5i7q" sourceRef="ExclusiveGateway_03n2wid" targetRef="ServiceTask_1n46xqn" />
    <bpmn:userTask id="UserTask_08a1zrh" name="Predisposizione Dati Contabili" camunda:candidateGroups="${ GROUP_ISTRUTTORE_CONTABILE_PROPONENTE }">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="LISTA_DECISIONI">
            <camunda:script scriptFormat="groovy">import it.linksmt.assatti.bpm.util.ListaDecisioni

decisioni = new ListaDecisioni()
decisioni.addDecisione('Salva', false)

decisioni.addDecisione('Salva e Inoltra Proposta', 'ESITO_CONTABILE_ISTRUTTORE', 'SI', 'GENERA_ATTO', true)
decisioni.addDecisione('Recupera Movimenti Contabili', null, null, 'RECUPERA_DATI_CONTABILI', false)
decisioni.addDecisione('Invia dati Contabili', null, null, 'INVIA_DATI_CONTABILI', false)

decisioni.addDecisione('Restituisci a Proponente', 'restituzione_proponente', 'ESITO_CONTABILE_ISTRUTTORE', 'NO', 'RITIRO_CONTABILE', true)

decisioni.export()</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="SCENARI_DISABILITAZIONE">
            <camunda:list>
              <camunda:value>TuttoNonModificabile</camunda:value>
              <camunda:value>ImportiEntrataUscitaEditabili</camunda:value>
              <camunda:value>DataScadenzaContabileEditabile</camunda:value>
              <camunda:value>DatiContabiliEditabili</camunda:value>
            </camunda:list>
          </camunda:inputParameter>
          <camunda:inputParameter name="LISTA_DOCUMENTI_ANTEPRIMA">
            <camunda:script scriptFormat="groovy">java.util.ArrayList

LISTA_DOCUMENTI_ANTEPRIMA = new ArrayList();

if(TIPO_ATTO.equalsIgnoreCase('DD')){
	LISTA_DOCUMENTI_ANTEPRIMA.add('PROPOSTA_DETERMINA_DIRIGENZIALE')
} else if(TIPO_ATTO.equalsIgnoreCase('DL')){
	LISTA_DOCUMENTI_ANTEPRIMA.add('PROPOSTA_DETERMINA_LIQUIDAZIONE')
}

return LISTA_DOCUMENTI_ANTEPRIMA</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="LISTA_DOCUMENTI_GENERAZIONE">
            <camunda:script scriptFormat="groovy">java.util.ArrayList

LISTA_DOCUMENTI_GENERAZIONE = new ArrayList();

if(TIPO_ATTO.equalsIgnoreCase('DD')){
	LISTA_DOCUMENTI_GENERAZIONE.add('PROPOSTA_DETERMINA_DIRIGENZIALE')
} else if(TIPO_ATTO.equalsIgnoreCase('DL')){
	LISTA_DOCUMENTI_GENERAZIONE.add('PROPOSTA_DETERMINA_LIQUIDAZIONE')
}

return LISTA_DOCUMENTI_GENERAZIONE</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="RIGENERAZIONE_DOCUMENTO">SI</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_05j3qb6</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1mmtol9</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="SequenceFlow_1mmtol9" sourceRef="UserTask_08a1zrh" targetRef="ExclusiveGateway_072cd9b" />
    <bpmn:serviceTask id="ServiceTask_1n46xqn" name="Inserimento Dati Contabili Proponente" camunda:delegateExpression="${ registrazioneEventoService }">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="IMPOSTA_STATO">Inserimento Dati Contabili Proponente</camunda:inputParameter>
          <camunda:inputParameter name="REGISTRA_EVENTO">PROPOSTA_INVIATA_A_CONTABILE_PROPONENTE</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0gc5i7q</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_05j3qb6</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_05j3qb6" sourceRef="ServiceTask_1n46xqn" targetRef="UserTask_08a1zrh" />
    <bpmn:sequenceFlow id="SequenceFlow_0k48vd8" sourceRef="ExclusiveGateway_03n2wid" targetRef="Task_0sbjdua">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${(!execution.hasVariable('EDIT_ITER') || execution.getVariable('EDIT_ITER') == null || !execution.getVariable('EDIT_ITER').equals('SI')) &amp;&amp; (!execution.hasVariable('RITIRO') || execution.getVariable('RITIRO') == null || !execution.getVariable('RITIRO').equalsIgnoreCase('SI')) &amp;&amp; (!execution.hasVariable('INVIO_A_CONTABILE_ISTRUTTORE') || execution.getVariable('INVIO_A_CONTABILE_ISTRUTTORE') == null || execution.getVariable('INVIO_A_CONTABILE_ISTRUTTORE').equalsIgnoreCase('NO'))}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="ExclusiveGateway_072cd9b" default="SequenceFlow_0sntujt">
      <bpmn:incoming>SequenceFlow_1mmtol9</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0sntujt</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1eagok1</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0sntujt" sourceRef="ExclusiveGateway_072cd9b" targetRef="Task_0sbjdua" />
    <bpmn:serviceTask id="ServiceTask_0on10ey" name="Restituzione a Istruttore Proposta" camunda:delegateExpression="${ registrazioneEventoService }">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="IMPOSTA_STATO">Predisposizione Proposta</camunda:inputParameter>
          <camunda:inputParameter name="REGISTRA_EVENTO">PROPOSTA_IN_PREDISPOSIZIONE</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1eagok1</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1503ep8</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_1eagok1" sourceRef="ExclusiveGateway_072cd9b" targetRef="ServiceTask_0on10ey">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${ ESITO_CONTABILE_ISTRUTTORE == 'NO' }</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1503ep8" sourceRef="ServiceTask_0on10ey" targetRef="UserTask_05kb3hb" />
    <bpmn:sequenceFlow id="SequenceFlow_0dlysep" name="Ritiro proposta" sourceRef="ExclusiveGateway_03n2wid" targetRef="EndEvent_1hchzca">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${(!execution.hasVariable('EDIT_ITER') || execution.getVariable('EDIT_ITER') == null || !execution.getVariable('EDIT_ITER').equals('SI')) &amp;&amp; execution.hasVariable('RITIRO') &amp;&amp; execution.getVariable('RITIRO') != null &amp;&amp; execution.getVariable('RITIRO').equalsIgnoreCase('SI')}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_1utbe12" name="Modifica Iter" sourceRef="ExclusiveGateway_03n2wid" targetRef="UserTask_05kb3hb">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${execution.hasVariable('EDIT_ITER') &amp;&amp; execution.getVariable('EDIT_ITER') != null &amp;&amp; execution.getVariable('EDIT_ITER').equals('SI')}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="istruttoriaDD">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="144" y="237" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="117" y="213" width="90" height="20" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_05kb3hb_di" bpmnElement="UserTask_05kb3hb">
        <dc:Bounds x="255" y="215" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0zgw00c_di" bpmnElement="SequenceFlow_0zgw00c">
        <di:waypoint x="355" y="255" />
        <di:waypoint x="399" y="255" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="359" y="170" width="90" height="20" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1cyvzyd_di" bpmnElement="SequenceFlow_1cyvzyd">
        <di:waypoint x="180" y="255" />
        <di:waypoint x="255" y="254" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="193" y="178" width="90" height="20" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_1hchzca_di" bpmnElement="EndEvent_1hchzca">
        <dc:Bounds x="1056" y="237" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="579" y="213" width="90" height="20" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0djnc75_di" bpmnElement="Task_0sbjdua">
        <dc:Bounds x="867" y="215" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_00xs8y9_di" bpmnElement="SequenceFlow_00xs8y9">
        <di:waypoint x="967" y="255" />
        <di:waypoint x="1056" y="255" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="534.5" y="173.5" width="90" height="13" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_03n2wid_di" bpmnElement="ExclusiveGateway_03n2wid" isMarkerVisible="true">
        <dc:Bounds x="399" y="230" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0gc5i7q_di" bpmnElement="SequenceFlow_0gc5i7q">
        <di:waypoint x="449" y="255" />
        <di:waypoint x="485" y="255" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="UserTask_08a1zrh_di" bpmnElement="UserTask_08a1zrh">
        <dc:Bounds x="635" y="215" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1mmtol9_di" bpmnElement="SequenceFlow_1mmtol9">
        <di:waypoint x="735" y="255" />
        <di:waypoint x="774" y="255" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_1n46xqn_di" bpmnElement="ServiceTask_1n46xqn">
        <dc:Bounds x="485" y="215" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_05j3qb6_di" bpmnElement="SequenceFlow_05j3qb6">
        <di:waypoint x="585" y="255" />
        <di:waypoint x="635" y="255" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0k48vd8_di" bpmnElement="SequenceFlow_0k48vd8">
        <di:waypoint x="424" y="280" />
        <di:waypoint x="424" y="484" />
        <di:waypoint x="917" y="484" />
        <di:waypoint x="917" y="295" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_072cd9b_di" bpmnElement="ExclusiveGateway_072cd9b" isMarkerVisible="true">
        <dc:Bounds x="774" y="230" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0sntujt_di" bpmnElement="SequenceFlow_0sntujt">
        <di:waypoint x="824" y="255" />
        <di:waypoint x="867" y="255" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_0on10ey_di" bpmnElement="ServiceTask_0on10ey">
        <dc:Bounds x="485" y="82" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1eagok1_di" bpmnElement="SequenceFlow_1eagok1">
        <di:waypoint x="799" y="230" />
        <di:waypoint x="799" y="122" />
        <di:waypoint x="585" y="122" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1503ep8_di" bpmnElement="SequenceFlow_1503ep8">
        <di:waypoint x="485" y="122" />
        <di:waypoint x="295" y="122" />
        <di:waypoint x="295" y="214" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0dlysep_di" bpmnElement="SequenceFlow_0dlysep">
        <di:waypoint x="414" y="270" />
        <di:waypoint x="376" y="322" />
        <di:waypoint x="376" y="519" />
        <di:waypoint x="1074" y="519" />
        <di:waypoint x="1074" y="278" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="370" y="526" width="72" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1utbe12_di" bpmnElement="SequenceFlow_1utbe12">
        <di:waypoint x="424" y="226" />
        <di:waypoint x="424" y="184" />
        <di:waypoint x="305" y="184" />
        <di:waypoint x="305" y="215" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="357" y="186" width="62" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
